#!/bin/sh /etc/rc.common

# OpenWrt/LEDE init script for auto_auth service

# Start priority
START=99
# Stop priority
STOP=10

# Add a custom 'status' command
EXTRA_COMMANDS="status"
EXTRA_HELP="        status          Print the status by stalker"

# Define PID file location
PID_DIR="/var/run/auto_auth"
PID_FILE="${PID_DIR}/auto_auth.pid"

# Define the main application launcher
APP_LAUNCHER="/root/AsyncGadget/launcher.sh"

start() {
    # Check if the service is already running
    if [ -e "$PID_FILE" ] && kill -0 "$(<"$PID_FILE")" 2>/dev/null; then
        echo "Service is already running."
        return 1
    fi

    echo "Starting autoauth service..."

    # Ensure the PID directory exists
    mkdir -p "$PID_DIR"

    # Export environment variable for the script
    export LOG_IN_FILE=0

    # Start the daemon
    # -S: Start
    # -b: Run in background
    # -m: Create PID file
    # -p: PID file path
    # -x: Executable path
    start-stop-daemon -S -b -m -p "$PID_FILE" \
        -x "$APP_LAUNCHER" -- auto_auth /root/accounts

    echo "Service started successfully."
}

stop() {
    echo "Stopping autoauth service..."

    # Stop the daemon using the PID file
    # -K: Stop
    # -p: PID file path
    # The command returns 0 if the process was stopped, 1 otherwise.
    if start-stop-daemon -K -p "$PID_FILE"; then
        # Remove the PID file only if the process was successfully stopped
        rm -f "$PID_FILE"
        echo "Service stopped."
    else
        echo "Service was not running or could not be stopped."
        # Clean up stale PID file if it exists
        rm -f "$PID_FILE"
    fi
}

status() {
    # Use the application's own status command
    "$APP_LAUNCHER" stalker auto_auth
}
